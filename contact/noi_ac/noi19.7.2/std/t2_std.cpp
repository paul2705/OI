#include<bits/stdc++.h>

typedef unsigned int uint;
typedef long long ll;
typedef unsigned long long ull;
typedef double lf;
typedef long double llf;
typedef std::pair<int,int> pii;

#define xx first
#define yy second

template<typename T> inline T max(T a,T b){return a>b?a:b;}
template<typename T> inline T min(T a,T b){return a<b?a:b;}
template<typename T> inline T abs(T a){return a>0?a:-a;}
template<typename T> inline bool repr(T &a,T b){return a<b?a=b,1:0;}
template<typename T> inline bool repl(T &a,T b){return a>b?a=b,1:0;}
template<typename T> inline T gcd(T a,T b){T t;if(a<b){while(a){t=a;a=b%a;b=t;}return b;}else{while(b){t=b;b=a%b;a=t;}return a;}}
template<typename T> inline T sqr(T x){return x*x;}
#define mp(a,b) std::make_pair(a,b)
#define pb push_back
#define I __attribute__((always_inline))inline
#define mset(a,b) memset(a,b,sizeof(a))
#define mcpy(a,b) memcpy(a,b,sizeof(a))

#define fo0(i,n) for(int i=0,i##end=n;i<i##end;i++)
#define fo1(i,n) for(int i=1,i##end=n;i<=i##end;i++)
#define fo(i,a,b) for(int i=a,i##end=b;i<=i##end;i++)
#define fd0(i,n) for(int i=(n)-1;~i;i--)
#define fd1(i,n) for(int i=n;i;i--)
#define fd(i,a,b) for(int i=a,i##end=b;i>=i##end;i--)
#define foe(i,x)for(__typeof((x).end())i=(x).begin();i!=(x).end();++i)
#define fre(i,x)for(__typeof((x).rend())i=(x).rbegin();i!=(x).rend();++i)

struct Cg{I char operator()(){return getchar();}};
struct Cp{I void operator()(char x){putchar(x);}};
#define OP operator
#define RT return *this;
#define UC unsigned char
#define RX x=0;UC t=P();while((t<'0'||t>'9')&&t!='-')t=P();bool f=0;\
if(t=='-')t=P(),f=1;x=t-'0';for(t=P();t>='0'&&t<='9';t=P())x=x*10+t-'0'
#define RL if(t=='.'){lf u=0.1;for(t=P();t>='0'&&t<='9';t=P(),u*=0.1)x+=u*(t-'0');}if(f)x=-x
#define RU x=0;UC t=P();while(t<'0'||t>'9')t=P();x=t-'0';for(t=P();t>='0'&&t<='9';t=P())x=x*10+t-'0'
#define TR *this,x;return x;
I bool IS(char x){return x==10||x==13||x==' ';}template<typename T>struct Fr{T P;I Fr&OP,(int&x)
{RX;if(f)x=-x;RT}I OP int(){int x;TR}I Fr&OP,(ll &x){RX;if(f)x=-x;RT}I OP ll(){ll x;TR}I Fr&OP,(char&x)
{for(x=P();IS(x);x=P());RT}I OP char(){char x;TR}I Fr&OP,(char*x){char t=P();for(;IS(t);t=P());if(~t){for(;!IS
(t)&&~t;t=P())*x++=t;}*x++=0;RT}I Fr&OP,(lf&x){RX;RL;RT}I OP lf(){lf x;TR}I Fr&OP,(llf&x){RX;RL;RT}I OP llf()
{llf x;TR}I Fr&OP,(uint&x){RU;RT}I OP uint(){uint x;TR}I Fr&OP,(ull&x){RU;RT}I OP ull(){ull x;TR}};Fr<Cg>in;
#define WI(S) if(x){if(x<0)P('-'),x=-x;UC s[S],c=0;while(x)s[c++]=x%10+'0',x/=10;while(c--)P(s[c]);}else P('0')
#define WL if(y){lf t=0.5;for(int i=y;i--;)t*=0.1;if(x>=0)x+=t;else x-=t,P('-');*this,(ll)(abs(x));P('.');if(x<0)\
x=-x;while(y--){x*=10;x-=floor(x*0.1)*10;P(((int)x)%10+'0');}}else if(x>=0)*this,(ll)(x+0.5);else *this,(ll)(x-0.5);
#define WU(S) if(x){UC s[S],c=0;while(x)s[c++]=x%10+'0',x/=10;while(c--)P(s[c]);}else P('0')
template<typename T>struct Fw{T P;I Fw&OP,(int x){WI(10);RT}I Fw&OP()(int x){WI(10);RT}I Fw&OP,(uint x){WU(10);RT}
I Fw&OP()(uint x){WU(10);RT}I Fw&OP,(ll x){WI(19);RT}I Fw&OP()(ll x){WI(19);RT}I Fw&OP,(ull x){WU(20);RT}I Fw&OP()
(ull x){WU(20);RT}I Fw&OP,(char x){P(x);RT}I Fw&OP()(char x){P(x);RT}I Fw&OP,(const char*x){while(*x)P(*x++);RT}
I Fw&OP()(const char*x){while(*x)P(*x++);RT}I Fw&OP()(lf x,int y){WL;RT}I Fw&OP()(llf x,int y){WL;RT}};Fw<Cp>out;

const int table[1316*6]={};

#define rand rand_

inline uint rand_()
{
	static uint s=time(0)^(reinterpret_cast<ull>(new char)&0xffffffff);
    s^=s<<13;
    s^=s>>17;
    s^=s<<5;
    return s;
}

const int n=30;

std::vector<pii>s;

inline lf cal(int x1,int y1,int x2,int y2,int x3,int y3)
{
	x2-=x1,y2-=y1,x3-=x1,y3-=y1;
	if(x2*y3-y2*x3==0)return 180;
	int t=x2*x3+y2*y3;
	lf v=acos(t/sqrt((x2*x2+y2*y2)*(x3*x3+y3*y3)));
	for(int i=2;i;i--)
	{
		x1=x3,x3=-x2,x2=x1-x2;
		y1=y3,y3=-y2,y2=y1-y2;
		t=x2*x3+y2*y3;
		v=max(v,acos(t/sqrt((x2*x2+y2*y2)*(x3*x3+y3*y3))));
	}
	return v*57.29577951308232;
}

inline lf cal(pii a,pii b,pii c)
{
	return cal(a.xx,a.yy,b.xx,b.yy,c.xx,c.yy);
}

struct data
{
	pii a,b,c;
};

std::vector<data>rs;

struct d2
{
	int a,b,c;
	inline int get(int x,int y)
	{
		if(x>y)std::swap(x,y);
		if(x!=a)return a;
		if(y!=c)return c;
		return b;
	}
};

inline d2 gd2(int a,int b,int c)
{
	if(a>b)std::swap(a,b);
	if(b>c)std::swap(b,c);
	if(a>b)std::swap(a,b);
	return(d2){a,b,c};
}

const int nx=n*n+1;

std::vector<d2>p[nx];

inline int id(pii x){return x.xx*n+x.yy-n;}
inline int id(int x,int y){return x*n+y-n;}

int vt,vis[nx],q[nx],pre[nx];
d2 prd[nx];

#define uassert(x) {if(!(x))return std::vector<d2>();}

inline std::vector<d2>_fw(int a,int b,int ax,int ay)
{
	//return a path shift (b,ax,ay)
	++vt;
	int qe=0;
	q[qe++]=a,vis[a]=vt;
	vis[ax]=vis[ay]=vt;
	for(int i=0;i<qe;i++)
	{
		foe(j,p[q[i]])
		{
			#define chk(t) if(t==ax||t==ay)continue;
			chk(j->a);
			chk(j->b);
			chk(j->c);
			#undef chk
			#define chk(t) if(t!=q[i]&&vis[t]!=vt){q[qe++]=t,vis[t]=vt,pre[t]=q[i],prd[t]=*j;if(t==b)goto ok;}
			chk(j->a);
			chk(j->b);
			chk(j->c);
			#undef chk
		}
	}
	//out,qe,'\n';
	//assert(0);
	return std::vector<d2>();
	ok:;
	std::vector<d2>res;
	std::vector<pii>tmp;
	int x=b;
	while(x!=a)
	{
		tmp.pb(mp(x,prd[x].get(x,pre[x])));
		x=pre[x];
		//out,x,' ',a,'\n';
	}
	tmp.pb(mp(a,0));
	//out,tmp.size(),'\n';
	fo0(i,tmp.size()-1)
	{
		res.pb((d2){tmp[i].xx,tmp[i+1].xx,tmp[i].yy});
	}
	res.pb((d2){a,ax,ay});
	fd0(i,tmp.size()-1)
	{
		res.pb((d2){tmp[i].yy,tmp[i+1].xx,tmp[i].xx});
	}
	if(1){
		std::map<int,int>po;
		foe(i,res)po[i->a]=i->a,po[i->b]=i->b,po[i->c]=i->c;
		foe(i,res)
		{
			int t=po[i->a];
			po[i->a]=po[i->c];
			po[i->c]=po[i->b];
			po[i->b]=t;
		}
		//out,a,' ',b,' ',ax,' ',ay,'\n';
		//foe(i,tmp)out,i->xx,' ',i->yy,'\n';
		foe(i,po)
		{
			if(i->xx==b)uassert(i->yy==ay)
			else if(i->xx==ay)uassert(i->yy==ax)
			else if(i->xx==ax)uassert(i->yy==b)
			else uassert(i->xx==i->yy)
		}
		//out,"ok\n";
	}
	return res;
	//out,qe,'\n';
}

inline std::vector<d2> findway(int a,int b,int c)
{
	fo0(i,rand()%3)
	{
		int t=a;
		a=b,b=c,c=t;
	}
	d2 t=p[a][rand()%p[a].size()];
	int bt,ct;
	if(t.a==a)bt=t.b,ct=t.c;
	else if(t.b==a)bt=t.a,ct=t.c;
	else bt=t.a,ct=t.b;
	std::vector<d2>x,y,z;
	x=_fw(bt,b,ct,a);//returns b,ct,a
	y=_fw(ct,c,a,b);//will use ct,a,b
	foe(i,y)
	{
		if(i->a==ct&&i->b==a&&i->c==b)
		{
			//out,"ok\n";
			foe(j,x)z.pb(*j);
		}else z.pb(*i);
	}
	if(1){
		std::map<int,int>po;
		foe(i,z)po[i->a]=i->a,po[i->b]=i->b,po[i->c]=i->c;
		foe(i,z)
		{
			int t=po[i->a];
			po[i->a]=po[i->c];
			po[i->c]=po[i->b];
			po[i->b]=t;
		}
		//out,a,' ',b,' ',c,'\n';
		//foe(i,po)out,i->xx,' ',i->yy,'\n';
		foe(i,po)
		{
			if(i->xx==a)uassert(i->yy==c)
			else if(i->xx==c)uassert(i->yy==b)
			else if(i->xx==b)uassert(i->yy==a)
			else uassert(i->xx==i->yy)
		}
		//out,"ok\n";
	}
	return z;
}

inline void ex(int a,int&b,int&c)
{
	b=(a-1)/n+1;
	c=(a-1)%n+1;
}

int main()
{
	//freopen("data\\x2.in","r",stdin);
	//freopen("in.txt","r",stdin);
	//std::set<lf>u;
	fo0(i,1316)
	{
		data t;
		t.a.xx=table[i*6];
		t.a.yy=table[i*6+1];
		t.b.xx=table[i*6+2];
		t.b.yy=table[i*6+3];
		t.c.xx=table[i*6+4];
		t.c.yy=table[i*6+5];
		rs.pb(t);
	}
	//foe(i,u)printf("%.5lf\n",*i);
	/*std::map<pii,int>tc;
	foe(i,rs)tc[i->a]++,tc[i->b]++,tc[i->c]++;
	int mi=233,ma=0;
	foe(i,tc)repl(mi,i->yy),repr(ma,i->yy);
	out,tc.size(),' ',mi,' ',ma,'\n'; */
	fo1(i,n)fo1(j,n)s.pb(mp(i,j));
	std::vector<d2>q;
	foe(i,rs)
	{
		d2 t=gd2(id(i->a),id(i->b),id(i->c));
		p[t.a].pb(t);
		p[t.b].pb(t);
		p[t.c].pb(t);
		q.pb(t);
	}
	//fo1(i,n)fo1(j,n-2)findway(id(i,j),id(i,j+1),id(i,j+2));
	//fo1(i,n-2)fo1(j,n)findway(id(i,j),id(i+1,j),id(i+2,j));
	int t[n+1][n+1];
	(int)in;
	fo1(i,n)fo1(j,n)in,t[i][j];
	std::vector<d2>ans;
	while(1)
	{
		bool flag=1;
		fo1(i,n)fo1(j,n)if(t[i][j]!=id(i,j))
		{
			//out,i,' ',j,'\n';
			//out,t[9][5],'\n';
			/*if(i==n&&j==n-1)
			{
				fo1(a,n){fo1(b,n)out,t[a][b],' ';out,'\n';}
				flag=0;
				//break;
			}*/
			std::vector<d2>tmp;
			int ux,uy;
			fo1(a,n)fo1(b,n)if(t[a][b]==id(i,j))ux=a,uy=b;
			for(int rc=100;rc;rc--)
			{
				int x,y;
				do x=rand()%n+1,y=rand()%n+1;while(x<i||(x==i&&y<=j)||(x==ux&&y==uy));
				//out,ux,' ',uy,' ',i,' ',j,' ',x,' ',y,'\n';
				tmp=findway(id(ux,uy),id(i,j),id(x,y));
				//out,x,' ',y,' ',tmp.size(),'\n';
				if(tmp.size())break;
			}
			if(!tmp.size())
			{
				flag=0;
				break;
			}
			foe(k,tmp)
			{
				int x1,y1,x2,y2,x3,y3;
				ex(k->a,x1,y1);
				ex(k->b,x2,y2);
				ex(k->c,x3,y3);
				int v=t[x1][y1];
				t[x1][y1]=t[x3][y3];
				t[x3][y3]=t[x2][y2];
				t[x2][y2]=v;
				ans.pb(*k);
				//if(i==9&&j==5)out,x1,' ',y1,' ',x2,' ',y2,' ',x3,' ',y3,'\n';
			}
			assert(t[i][j]==id(i,j));
		}
		if(flag)break;
		out,flag,'\n';
		fo0(i,1000)
		{
			int x=rand()%q.size();
			int x1,y1,x2,y2,x3,y3;
			ex(q[x].a,x1,y1);
			ex(q[x].b,x2,y2);
			ex(q[x].c,x3,y3);
			int v=t[x1][y1];
			t[x1][y1]=t[x3][y3];
			t[x3][y3]=t[x2][y2];
			t[x2][y2]=v;
			ans.pb(q[x]);
		}
	}
	fo1(i,n)fo1(j,n)assert(t[i][j]==id(i,j));
	out,(int)ans.size(),'\n';
	foe(k,ans)
	{
		int x1,y1,x2,y2,x3,y3;
		ex(k->a,x1,y1);
		ex(k->b,x2,y2);
		ex(k->c,x3,y3);
		out,x1,' ',y1,' ',x2,' ',y2,' ',x3,' ',y3,'\n';
	}
}
